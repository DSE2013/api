// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.xebia.wartelist.web;

import com.xebia.wartelist.domain.Doctor;
import com.xebia.wartelist.domain.Hospital;
import com.xebia.wartelist.domain.HospitalEmployee;
import com.xebia.wartelist.domain.Notification;
import com.xebia.wartelist.domain.Operation;
import com.xebia.wartelist.domain.OperationType;
import com.xebia.wartelist.domain.Patient;
import com.xebia.wartelist.domain.TimeSlot;
import com.xebia.wartelist.domain.User;
import com.xebia.wartelist.service.DoctorService;
import com.xebia.wartelist.service.HospitalEmployeeService;
import com.xebia.wartelist.service.HospitalService;
import com.xebia.wartelist.service.NotificationService;
import com.xebia.wartelist.service.OperationService;
import com.xebia.wartelist.service.OperationTypeService;
import com.xebia.wartelist.service.PatientService;
import com.xebia.wartelist.service.TimeSlotService;
import com.xebia.wartelist.service.UserService;
import com.xebia.wartelist.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    DoctorService ApplicationConversionServiceFactoryBean.doctorService;
    
    @Autowired
    HospitalService ApplicationConversionServiceFactoryBean.hospitalService;
    
    @Autowired
    HospitalEmployeeService ApplicationConversionServiceFactoryBean.hospitalEmployeeService;
    
    @Autowired
    NotificationService ApplicationConversionServiceFactoryBean.notificationService;
    
    @Autowired
    OperationService ApplicationConversionServiceFactoryBean.operationService;
    
    @Autowired
    OperationTypeService ApplicationConversionServiceFactoryBean.operationTypeService;
    
    @Autowired
    PatientService ApplicationConversionServiceFactoryBean.patientService;
    
    @Autowired
    TimeSlotService ApplicationConversionServiceFactoryBean.timeSlotService;
    
    @Autowired
    UserService ApplicationConversionServiceFactoryBean.userService;
    
    public Converter<Doctor, String> ApplicationConversionServiceFactoryBean.getDoctorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.Doctor, java.lang.String>() {
            public String convert(Doctor doctor) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, Doctor> ApplicationConversionServiceFactoryBean.getIdToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.Doctor>() {
            public com.xebia.wartelist.domain.Doctor convert(java.math.BigInteger id) {
                return doctorService.findDoctor(id);
            }
        };
    }
    
    public Converter<String, Doctor> ApplicationConversionServiceFactoryBean.getStringToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.Doctor>() {
            public com.xebia.wartelist.domain.Doctor convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Doctor.class);
            }
        };
    }
    
    public Converter<Hospital, String> ApplicationConversionServiceFactoryBean.getHospitalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.Hospital, java.lang.String>() {
            public String convert(Hospital hospital) {
                return new StringBuilder().append(hospital.getName()).append(' ').append(hospital.getLatitude()).append(' ').append(hospital.getLongitude()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Hospital> ApplicationConversionServiceFactoryBean.getIdToHospitalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.Hospital>() {
            public com.xebia.wartelist.domain.Hospital convert(java.math.BigInteger id) {
                return hospitalService.findHospital(id);
            }
        };
    }
    
    public Converter<String, Hospital> ApplicationConversionServiceFactoryBean.getStringToHospitalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.Hospital>() {
            public com.xebia.wartelist.domain.Hospital convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Hospital.class);
            }
        };
    }
    
    public Converter<HospitalEmployee, String> ApplicationConversionServiceFactoryBean.getHospitalEmployeeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.HospitalEmployee, java.lang.String>() {
            public String convert(HospitalEmployee hospitalEmployee) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, HospitalEmployee> ApplicationConversionServiceFactoryBean.getIdToHospitalEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.HospitalEmployee>() {
            public com.xebia.wartelist.domain.HospitalEmployee convert(java.math.BigInteger id) {
                return hospitalEmployeeService.findHospitalEmployee(id);
            }
        };
    }
    
    public Converter<String, HospitalEmployee> ApplicationConversionServiceFactoryBean.getStringToHospitalEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.HospitalEmployee>() {
            public com.xebia.wartelist.domain.HospitalEmployee convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), HospitalEmployee.class);
            }
        };
    }
    
    public Converter<Notification, String> ApplicationConversionServiceFactoryBean.getNotificationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.Notification, java.lang.String>() {
            public String convert(Notification notification) {
                return new StringBuilder().append(notification.getTitle()).append(' ').append(notification.getMessage()).append(' ').append(notification.getCreatedAt()).append(' ').append(notification.getUpdatedAt()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Notification> ApplicationConversionServiceFactoryBean.getIdToNotificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.Notification>() {
            public com.xebia.wartelist.domain.Notification convert(java.math.BigInteger id) {
                return notificationService.findNotification(id);
            }
        };
    }
    
    public Converter<String, Notification> ApplicationConversionServiceFactoryBean.getStringToNotificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.Notification>() {
            public com.xebia.wartelist.domain.Notification convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Notification.class);
            }
        };
    }
    
    public Converter<Operation, String> ApplicationConversionServiceFactoryBean.getOperationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.Operation, java.lang.String>() {
            public String convert(Operation operation) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, Operation> ApplicationConversionServiceFactoryBean.getIdToOperationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.Operation>() {
            public com.xebia.wartelist.domain.Operation convert(java.math.BigInteger id) {
                return operationService.findOperation(id);
            }
        };
    }
    
    public Converter<String, Operation> ApplicationConversionServiceFactoryBean.getStringToOperationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.Operation>() {
            public com.xebia.wartelist.domain.Operation convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Operation.class);
            }
        };
    }
    
    public Converter<OperationType, String> ApplicationConversionServiceFactoryBean.getOperationTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.OperationType, java.lang.String>() {
            public String convert(OperationType operationType) {
                return new StringBuilder().append(operationType.getName()).toString();
            }
        };
    }
    
    public Converter<BigInteger, OperationType> ApplicationConversionServiceFactoryBean.getIdToOperationTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.OperationType>() {
            public com.xebia.wartelist.domain.OperationType convert(java.math.BigInteger id) {
                return operationTypeService.findOperationType(id);
            }
        };
    }
    
    public Converter<String, OperationType> ApplicationConversionServiceFactoryBean.getStringToOperationTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.OperationType>() {
            public com.xebia.wartelist.domain.OperationType convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), OperationType.class);
            }
        };
    }
    
    public Converter<Patient, String> ApplicationConversionServiceFactoryBean.getPatientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.Patient, java.lang.String>() {
            public String convert(Patient patient) {
                return new StringBuilder().append(patient.getSsn()).append(' ').append(patient.getLatitude()).append(' ').append(patient.getLongitude()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Patient> ApplicationConversionServiceFactoryBean.getIdToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.Patient>() {
            public com.xebia.wartelist.domain.Patient convert(java.math.BigInteger id) {
                return patientService.findPatient(id);
            }
        };
    }
    
    public Converter<String, Patient> ApplicationConversionServiceFactoryBean.getStringToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.Patient>() {
            public com.xebia.wartelist.domain.Patient convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Patient.class);
            }
        };
    }
    
    public Converter<TimeSlot, String> ApplicationConversionServiceFactoryBean.getTimeSlotToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.TimeSlot, java.lang.String>() {
            public String convert(TimeSlot timeSlot) {
                return new StringBuilder().append(timeSlot.getStartD()).append(' ').append(timeSlot.getEndD()).toString();
            }
        };
    }
    
    public Converter<BigInteger, TimeSlot> ApplicationConversionServiceFactoryBean.getIdToTimeSlotConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.TimeSlot>() {
            public com.xebia.wartelist.domain.TimeSlot convert(java.math.BigInteger id) {
                return timeSlotService.findTimeSlot(id);
            }
        };
    }
    
    public Converter<String, TimeSlot> ApplicationConversionServiceFactoryBean.getStringToTimeSlotConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.TimeSlot>() {
            public com.xebia.wartelist.domain.TimeSlot convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), TimeSlot.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.xebia.wartelist.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getEmail()).append(' ').append(user.getName()).toString();
            }
        };
    }
    
    public Converter<BigInteger, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.xebia.wartelist.domain.User>() {
            public com.xebia.wartelist.domain.User convert(java.math.BigInteger id) {
                return userService.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.xebia.wartelist.domain.User>() {
            public com.xebia.wartelist.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), User.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDoctorToStringConverter());
        registry.addConverter(getIdToDoctorConverter());
        registry.addConverter(getStringToDoctorConverter());
        registry.addConverter(getHospitalToStringConverter());
        registry.addConverter(getIdToHospitalConverter());
        registry.addConverter(getStringToHospitalConverter());
        registry.addConverter(getHospitalEmployeeToStringConverter());
        registry.addConverter(getIdToHospitalEmployeeConverter());
        registry.addConverter(getStringToHospitalEmployeeConverter());
        registry.addConverter(getNotificationToStringConverter());
        registry.addConverter(getIdToNotificationConverter());
        registry.addConverter(getStringToNotificationConverter());
        registry.addConverter(getOperationToStringConverter());
        registry.addConverter(getIdToOperationConverter());
        registry.addConverter(getStringToOperationConverter());
        registry.addConverter(getOperationTypeToStringConverter());
        registry.addConverter(getIdToOperationTypeConverter());
        registry.addConverter(getStringToOperationTypeConverter());
        registry.addConverter(getPatientToStringConverter());
        registry.addConverter(getIdToPatientConverter());
        registry.addConverter(getStringToPatientConverter());
        registry.addConverter(getTimeSlotToStringConverter());
        registry.addConverter(getIdToTimeSlotConverter());
        registry.addConverter(getStringToTimeSlotConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
